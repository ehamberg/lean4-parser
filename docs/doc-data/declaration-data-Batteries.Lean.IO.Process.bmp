{"name":"Batteries.Lean.IO.Process","instances":[],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/74dffd1a83cdd2969a31c9892b0517e7c6f50668/Batteries/Lean/IO/Process.lean#L35-L41","name":"IO.Process.runCmdWithInput","line":35,"kind":"def","docLink":"./Batteries/Lean/IO/Process.html#IO.Process.runCmdWithInput","doc":"Pipe `input` into stdin of the spawned process,\nthen return the entire content of stdout as a `String` upon completion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/IO/Process.html#IO.Process.runCmdWithInput\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">runCmdWithInput</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cmd : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(throwFailure : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/74dffd1a83cdd2969a31c9892b0517e7c6f50668/Batteries/Lean/IO/Process.lean#L15-L33","name":"IO.Process.runCmdWithInput'","line":15,"kind":"def","docLink":"./Batteries/Lean/IO/Process.html#IO.Process.runCmdWithInput'","doc":"Pipe `input` into stdin of the spawned process,\nthen return `(exitCode, stdout, stdErr)` upon completion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/IO/Process.html#IO.Process.runCmdWithInput'\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">runCmdWithInput'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cmd : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(throwFailure : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></span></div></div>"}]}